/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package project;

/**
 *
 * @author Fish
 */
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import java.io.File;
import java.awt.Desktop;
import java.awt.*;
import javax.swing.*;
import java.awt.event.*;
import java.util.ArrayList;
import javax.swing.event.*;
/**
 *
 * @author Fish
 */
public class DocumentSearchEngine extends JFrame {

    /**
     * Creates new form DocumentSearchEngine
     */
    public DocumentSearchEngine() {
        super("Document Search Engine");
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
 
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        searchPanel = new JPanel();
        searchBox = new JTextField();
        jComboBox1 = new JComboBox<>();
        inFileLabel = new JLabel();
        jButton1 = new JButton();
        listPanel = new JPanel();
        jScrollPane1 = new JScrollPane();
        jList1 = new JList(dlm);
        jScrollBar1 = new JScrollBar();
        gifLabel = new JLabel();
        lostText = new JLabel();
        helpText = new JLabel();
        setDefaultCloseOperation(EXIT_ON_CLOSE);

        searchBox.setBackground(new Color(204, 204, 204));
        searchBox.setForeground(new Color(0, 0, 0));
        searchBox.setText("Search here");

        jComboBox1.setBackground(new Color(102, 102, 102));
        jComboBox1.setForeground(new Color(0, 0, 0));
        jComboBox1.setModel(new DefaultComboBoxModel<>(new String[] { "All Files", "Books", "Music", "Image", "Documents", "Video"}));
        jComboBox1.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        inFileLabel.setText("Search in file type:");

        jButton1.setBackground(new Color(0, 0, 204));
        jButton1.setIcon(new ImageIcon("D:\\java.jpg")); // NOI18N
        jButton1.setMargin(new Insets(2, 2, 2, 2));
        jButton1.setMaximumSize(new Dimension(231, 231));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt){
                jButton1ActionPerformed(evt);
            }
        });

        GroupLayout jPanel1Layout = new GroupLayout(searchPanel);
        searchPanel.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(searchBox, GroupLayout.DEFAULT_SIZE, 576, Short.MAX_VALUE)
                .addGap (30, 30, 30)
                .addComponent(inFileLabel)
                .addGap(18, 18, 18)
                .addComponent(jComboBox1, GroupLayout.PREFERRED_SIZE, 161, GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(searchBox, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox1, GroupLayout.PREFERRED_SIZE, 31, GroupLayout.PREFERRED_SIZE)
                    .addComponent(inFileLabel))
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton1, GroupLayout.PREFERRED_SIZE, 46, GroupLayout.PREFERRED_SIZE))
        );

        listPanel.setBackground(new Color(102, 102, 102));

        jList1.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent evt) {
                if (evt.getClickCount() == 2) {
                String path = dlm.getElementAt(jList1.getSelectedIndex()).toString();
                Desktop d = Desktop.getDesktop();               
                try{    
                d.open(new File(path));
                }
                catch(Exception ex) {
                    System.out.println("Error");
                }
            }
            }
        });
        jScrollPane1.setViewportView(jList1);

        jScrollBar1.setBackground(new Color(153, 153, 255));

       GroupLayout jPanel2Layout = new GroupLayout(listPanel);
        listPanel.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane1)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollBar1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jScrollBar1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        gifLabel.setIcon(new ImageIcon("D:\\final.gif")); // NOI18N

        lostText.setBackground(new Color(0, 0, 0));
        lostText.setFont(new Font("Consolas", 3, 24)); // NOI18N
        lostText.setForeground(new Color(204, 0, 0));
        lostText.setHorizontalAlignment(SwingConstants.CENTER);
        lostText.setText("Lost something!!!!\n");

        helpText.setBackground(new Color(0, 0, 0));
        helpText.setFont(new Font("Microsoft YaHei", 3, 18)); // NOI18N
        helpText.setForeground(new Color(204, 0, 0));
        helpText.setText("I will help you find it...");

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(searchPanel, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(listPanel, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(helpText))
                    .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                        .addComponent(gifLabel, GroupLayout.PREFERRED_SIZE, 245, GroupLayout.PREFERRED_SIZE)
                        .addComponent(lostText, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(searchPanel, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(listPanel, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(lostText, GroupLayout.PREFERRED_SIZE, 30, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(helpText, GroupLayout.PREFERRED_SIZE, 16, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(gifLabel, GroupLayout.PREFERRED_SIZE, 552, GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        

    private void jComboBox1ActionPerformed(ActionEvent evt) {                                           
        // TODO add your handling code here:
      
    } 
 
     private void jButton1ActionPerformed(ActionEvent evt) {                                         
        // TODO add your handling code here:
        try{
        int value = jComboBox1.getSelectedIndex();
       if(evt.getSource() == jButton1 && value == 0){
           dlm.clear();dlm.addElement("loading....");
           doSearch(searchBox.getText(), "");
       }
       if(evt.getSource() == jButton1 && value == 1){
           dlm.clear();
           doSearch(searchBox.getText(), ".pdf");
           doSearch(searchBox.getText(), ".doc");
           doSearch(searchBox.getText(), ".docx");
           doSearch(searchBox.getText(), ".ppt");
           doSearch(searchBox.getText(), ".epub");
           doSearch(searchBox.getText(), ".mobi");
           
       }
       if(evt.getSource() == jButton1 && value == 2){
           dlm.clear();
           doSearch(searchBox.getText(), ".mp3");
           doSearch(searchBox.getText(), ".wav");
           doSearch(searchBox.getText(), ".m3u");
           
       }    
       if(evt.getSource() == jButton1 && value == 3){
           dlm.clear();
           doSearch(searchBox.getText(), ".jpg");
           doSearch(searchBox.getText(), ".jpeg");
           doSearch(searchBox.getText(), ".png");
           doSearch(searchBox.getText(), ".gif");
           doSearch(searchBox.getText(), ".tiff");
           doSearch(searchBox.getText(), ".bmp");
           doSearch(searchBox.getText(), ".webp");
       }    
       if(evt.getSource() == jButton1 && value == 4){
           dlm.clear();
           doSearch(searchBox.getText(), ".html");
           doSearch(searchBox.getText(), ".py");
           doSearch(searchBox.getText(), ".java");
           doSearch(searchBox.getText(), ".bin");
           doSearch(searchBox.getText(), ".css");
           doSearch(searchBox.getText(), ".js");
           doSearch(searchBox.getText(), ".php");
       }  
        if(evt.getSource() == jButton1 && value == 4){
           dlm.clear(); 
           doSearch(searchBox.getText(), ".mp4");
           doSearch(searchBox.getText(), ".mkv");
           doSearch(searchBox.getText(), ".mov");
           doSearch(searchBox.getText(), ".avi");
           doSearch(searchBox.getText(), ".avchd");
           doSearch(searchBox.getText(), ".flv");
           doSearch(searchBox.getText(), ".f4v");
           doSearch(searchBox.getText(), ".swf");
           
       }
        }
        catch(Exception ex) {
            ex.printStackTrace();
        }
    }  
     
    private void doSearch(String key, String type) throws Exception{
      
        ArrayList d = (new FileSearch()).search(key, type);
        System.out.println("justfinished searching");
        if (d.size()==0){dlm.addElement(key + "not found");}
        for (int i = 0; i < d.size(); i++) {
            String str = ((File)d.get(i)).getAbsolutePath();
            System.out.println(str);
            dlm.addElement(str);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DocumentSearchEngine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DocumentSearchEngine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DocumentSearchEngine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DocumentSearchEngine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DocumentSearchEngine().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private JButton jButton1;
    private JComboBox<String> jComboBox1;
    private JLabel inFileLabel;
    private JLabel gifLabel;
    private JLabel lostText;
    private JLabel helpText;
    private JPanel searchPanel;
    private JPanel listPanel;
    DefaultListModel dlm = new DefaultListModel();
    private JList<String> jList1;
    private JScrollBar jScrollBar1;
    private JScrollPane jScrollPane1;
    private JTextField searchBox;
    // End of variables declaration                   
}
